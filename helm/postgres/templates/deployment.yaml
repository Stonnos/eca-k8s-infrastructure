apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  labels:
    app: {{ .Values.appName }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
        - name: {{ .Values.appName }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.container.port }}
          env:
            - name: PG_DATA
              value: "/var/lib/postgresql/data/pgdata"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.postgres.usernameSecretKey }}
                  name: {{ .Values.postgres.secrets.name }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.postgres.passwordSecretKey }}
                  name: {{ .Values.postgres.secrets.name }}
            - name: TZ
              value: {{ .Values.postgres.timezone }}
            - name: PGTZ
              value: {{ .Values.postgres.timezone }}
          volumeMounts:
            - name: {{ .Values.persistenceVolumeClaim.name }}
              mountPath: /var/lib/postgresql/data
            - name: postgresql-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: {{ .Values.persistenceVolumeClaim.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistenceVolumeClaim.name }}
        - name: postgresql-initdb
          configMap:
            name: {{ .Values.appName }}